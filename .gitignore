# Ignore the target directory, which contains compiled artifacts.
target/

# Ignore debug and release output directories.
debug/
release/

# Ignore build artifacts.
**/*.rs.bk
**/*.d
**/*.exe
**/*.ilk
**/*.lib
**/*.meta
**/*.obj
**/*.pdb
**/*.pyc
**/*.rmeta
**/*.rlib
**/*.s
**/*.so

# Ignore Cargo.lock (if you have a binary or if building dependencies isn't reproducible)
# Uncomment the following line if you're building a library and want to ensure dependencies remain consistent.
# Cargo.lock

# Ignore .cargo, which may contain sensitive information.
.cargo/

# Ignore the generated documentation.
target/doc/

# Ignore IDE-specific files.
.idea/
.vscode/

# Ignore backup files created by editors.
*.swp
*.swo
*.bak
*.tmp
*.orig

# Ignore macOS-specific files.
.DS_Store

# Ignore Linux-specific files.
*~

# Ignore Windows-specific files.
Thumbs.db
Desktop.ini

# Ignore Makefile-specific artifacts.
*.d
*.o
*.obj
*.a
*.lo
*.la
*.lai
*.out
*.so
*.so.*
*.dylib
*.dll
*.lib
*.exe
*.app

# Ignore LLVM-related files.
*.ll
*.bc
*.opt
*.llvmbc
*.llvms
*.llvmo
*.llvmd

# Ignore intermediate files generated by clang/llvm.
*.s
*.bc

# Ignore auto-generated Makefiles.
Makefile.in
Makefile.am

# Ignore CMake files if using CMake for some parts.
CMakeFiles/
CMakeCache.txt
cmake_install.cmake
CMakeLists.txt.user

# Ignore Rust toolchain files.
.rustup/

# Ignore LLVM coverage files.
*.profraw
*.profdata
